//@ sourceMappingURL=client.map
// Generated by CoffeeScript 1.6.1

/*
  Здесь  реализован веьс клиентский JavaScript. Подразумевается, что модель
  подключается заранее.
*/


(function() {

  (function($) {
    return $(document).ready(function() {
      var drawWorld, imgBack, imgSpr, me, movePl, mv, socket, usergamemap;
      socket = io.connect(document.URL.match(/^http:\/\/[^/]*/));
      imgSpr = new Image();
      imgSpr.src = 'img\\spritesBeta.png';
      imgBack = new Image();
      imgBack.src = 'img\\backBeta.png';
      drawWorld = function(map) {
        var canva, ctx, nam, _i, _len, _ref, _results;
        canva = document.getElementById("canvas");
        ctx = canva.getContext("2d");
        ctx.drawImage(imgBack, 0, 0);
        ctx.font = "12px Arial";
        ctx.fillStyle = "black";
        _ref = map.names;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          nam = _ref[_i];
          ctx.drawImage(imgSpr, 102, 0, 32, 48, map.players[nam].x, map.players[nam].y, 32, 48);
          _results.push(ctx.fillText(map.players[nam].name, map.players[nam].x + 4, map.players[nam].y + 14));
        }
        return _results;
      };
      usergamemap = new World();
      mv = 0;
      me = new Player("P" + (Math.ceil(Math.random() * 16)), Math.ceil(Math.random() * 10) * 12, Math.ceil(Math.random() * 10) * 8);
      socket.emit('new user', me);
      socket.on('add world', function(worldmap) {
        usergamemap = new World(worldmap);
        usergamemap.addPlayer(me);
        drawWorld(usergamemap);
        return setInterval(movePl, 100);
      });
      socket.on('add user', function(pl) {
        usergamemap.addPlayer(new Player(pl.name, pl.x, pl.y));
        return drawWorld(usergamemap);
      });
      socket.on('change user', function(pl) {
        usergamemap.players[pl.name] = new Player(pl.name, pl.x, pl.y);
        return drawWorld(usergamemap);
      });
      $("body").keydown(function(e) {
        switch (e.keyCode) {
          case 39:
            return mv = 1;
          case 37:
            return mv = 2;
          case 38:
            return mv = 3;
          case 40:
            return mv = 4;
        }
      });
      $("body").keyup(function(e) {
        if (e.keyCode === 37 || 38 || 39 || 40) {
          return mv = 0;
        }
      });
      return movePl = function() {
        if (mv === 1) {
          me.x = me.BoundColX(me.x + 12);
        } else if (mv === 2) {
          me.x = me.BoundColX(me.x - 12);
        } else if (mv === 3) {
          me.y = me.BoundColY(me.y - 8);
        } else if (mv === 4) {
          me.y = me.BoundColY(me.y + 8);
        }
        if (mv > 0) {
          socket.emit('update user', me);
          return drawWorld(usergamemap);
        }
      };
    });
  })(jQuery);

}).call(this);
